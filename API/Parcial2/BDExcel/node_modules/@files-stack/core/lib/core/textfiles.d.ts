import { VSBuffer, VSBufferReadable } from '@vscode-alt/monaco-editor/esm/vs/base/common/buffer';
import { ITextSnapshot } from '../interfaces';
import { FileOperationError } from './files';
import { ITextFileOperationResult as TextFileOperationResult, IReadTextFileOptions_Input as IReadTextFileOptions, IWriteTextFileOptions_Input as IWriteTextFileOptions } from '../interfaces';
export declare class TextFileOperationError extends FileOperationError {
    textFileOperationResult: TextFileOperationResult;
    options?: IReadTextFileOptions & IWriteTextFileOptions;
    constructor(message: string, textFileOperationResult: TextFileOperationResult, options?: IReadTextFileOptions & IWriteTextFileOptions);
    static isTextFileOperationError(obj: unknown): obj is TextFileOperationError;
}
/**
 * Helper method to convert a snapshot into its full string form.
 */
export declare function snapshotToString(snapshot: ITextSnapshot): string;
export declare function stringToSnapshot(value: string): ITextSnapshot;
export declare class TextSnapshotReadable implements VSBufferReadable {
    private snapshot;
    private preamble?;
    private preambleHandled;
    constructor(snapshot: ITextSnapshot, preamble?: string);
    read(): VSBuffer | null;
}
export declare function toBufferOrReadable(value: string): VSBuffer;
export declare function toBufferOrReadable(value: ITextSnapshot): VSBufferReadable;
export declare function toBufferOrReadable(value: string | ITextSnapshot): VSBuffer | VSBufferReadable;
export declare function toBufferOrReadable(value: string | ITextSnapshot | undefined): VSBuffer | VSBufferReadable | undefined;
