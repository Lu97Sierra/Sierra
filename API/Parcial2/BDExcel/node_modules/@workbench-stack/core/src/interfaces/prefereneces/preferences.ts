import { IResourceSideBySideInput, IEditorOptions, IEditorGroup } from '../generated-model';
import { ConfigurationTarget } from '../configuration';
import { URI } from '@vscode-alt/monaco-editor/esm/vs/base/common/uri';
export interface IPreferenceEditorService {

    openRawDefaultSettings(): Promise<any>;
    /*
    * Open preference editor */
    openSettings(jsonEditor: boolean | undefined, query: string | undefined): Promise<any>;

    openGlobalSettings(jsonEditor?: boolean, options?: ISettingsEditorOptions, group?: IEditorGroup): Promise<any>;

    openRemoteSettings(): Promise<any>;

    openWorkspaceSettings(jsonEditor?: boolean, options?: ISettingsEditorOptions, group?: IEditorGroup): Promise<any>;

    openFolderSettings(folder: URI, jsonEditor?: boolean, options?: ISettingsEditorOptions, group?: IEditorGroup): Promise<any>;

    switchSettings(target: ConfigurationTarget, resource: URI, jsonEditor?: boolean): Promise<void>;

    openGlobalKeybindingSettings(textual: boolean): Promise<void>;
    openDefaultKeybindingsFile(): Promise<void>; //@sri modified
    getConfigurationTargetFromSettingsResource(resource: URI): ConfigurationTarget; //@sri modified
    getMostCommonlyUsedSettings(): string[]; //@sri modified
    resetSetting(resource: URI, settingKey: string): Promise<boolean>; //@sri modified
}


export interface ISettingsEditorOptions extends IEditorOptions {
    target?: ConfigurationTarget;
    folderUri?: URI;
    query?: string;
}
