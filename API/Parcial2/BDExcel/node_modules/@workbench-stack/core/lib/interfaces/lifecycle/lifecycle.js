"use strict";
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NullLifecycleService = exports.LifecyclePhase = exports.StartupKind = exports.ShutdownReason = void 0;
const event_1 = require("@vscode-alt/monaco-editor/esm/vs/base/common/event");
var ShutdownReason;
(function (ShutdownReason) {
    /** Window is closed */
    ShutdownReason[ShutdownReason["CLOSE"] = 1] = "CLOSE";
    /** Application is quit */
    ShutdownReason[ShutdownReason["QUIT"] = 2] = "QUIT";
    /** Window is reloaded */
    ShutdownReason[ShutdownReason["RELOAD"] = 3] = "RELOAD";
    /** Other configuration loaded into window */
    ShutdownReason[ShutdownReason["LOAD"] = 4] = "LOAD";
})(ShutdownReason = exports.ShutdownReason || (exports.ShutdownReason = {}));
var StartupKind;
(function (StartupKind) {
    StartupKind[StartupKind["NewWindow"] = 1] = "NewWindow";
    StartupKind[StartupKind["ReloadedWindow"] = 3] = "ReloadedWindow";
    StartupKind[StartupKind["ReopenedWindow"] = 4] = "ReopenedWindow";
})(StartupKind = exports.StartupKind || (exports.StartupKind = {}));
var LifecyclePhase;
(function (LifecyclePhase) {
    /**
     * The first phase signals that we are about to startup getting ready.
     */
    LifecyclePhase[LifecyclePhase["Starting"] = 1] = "Starting";
    /**
     * Services are ready and the view is about to restore its state.
     */
    LifecyclePhase[LifecyclePhase["Ready"] = 2] = "Ready";
    /**
     * Views, panels and editors have restored. For editors this means, that
     * they show their contents fully.
     */
    LifecyclePhase[LifecyclePhase["Restored"] = 3] = "Restored";
    /**
     * The last phase after views, panels and editors have restored and
     * some time has passed (few seconds).
     */
    LifecyclePhase[LifecyclePhase["Eventually"] = 4] = "Eventually";
})(LifecyclePhase = exports.LifecyclePhase || (exports.LifecyclePhase = {}));
exports.NullLifecycleService = {
    onWillShutdown: event_1.Event.None,
    onShutdown: event_1.Event.None,
    phase: 3 /* Restored */,
    startupKind: 1 /* NewWindow */,
    when() { return Promise.resolve(); }
};
//# sourceMappingURL=lifecycle.js.map