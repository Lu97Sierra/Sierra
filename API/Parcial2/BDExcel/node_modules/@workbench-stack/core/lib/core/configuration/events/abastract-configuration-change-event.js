"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractConfigurationChangeEvent = void 0;
const helpers_1 = require("../helpers");
//src/vs/platform/configuration/common/configurationModels.ts
class AbstractConfigurationChangeEvent {
    doesConfigurationContains(configuration, config) {
        let changedKeysTree = configuration.contents;
        let requestedTree = helpers_1.toValuesTree({ [config]: true }, () => { });
        let key;
        while (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property
            changedKeysTree = changedKeysTree[key];
            if (!changedKeysTree) {
                return false; // Requested tree is not found
            }
            requestedTree = requestedTree[key];
        }
        return true;
    }
    updateKeys(configuration, keys, resource) {
        for (const key of keys) {
            configuration.setValue(key, {});
        }
    }
}
exports.AbstractConfigurationChangeEvent = AbstractConfigurationChangeEvent;
//# sourceMappingURL=abastract-configuration-change-event.js.map