// import { injectable } from 'inversify';
// import { request, copy, download, asText } from '../../utils/request';
// import { IFileDownloadService } from '../../interfaces/file-download-service';
// @injectable()
// export class DownloadService implements IFileDownloadService {
//     public async download(uri, target: string): Promise<void> {
//         if (uri.scheme === 'file') {
//             return copy(uri.fsPath, target);
//         }
//         const options = { type: 'GET', url: uri.toString() };
//         return request(options)
//             .then(context => {
//                 if (context.res.statusCode === 200) {
//                     return download(target, context);
//                 }
//                 return asText(context)
//                     .then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\n\n${message}`)));
//             });
//     }
// }
//# sourceMappingURL=download-service.js.map