import { INotificationService, INotificationHandle, IPromptChoice, IPromptOptions, INotificationMessageStr as INotificationMessage } from '@workbench-stack/core';
import { NotificationSeverity as Severity } from '@workbench-stack/core';
import { ApolloClient } from 'apollo-client';
export declare class NotificationService implements INotificationService {
    private apollo;
    constructor(apollo: ApolloClient<any>);
    info(message: INotificationMessage | INotificationMessage[]): void;
    warn(message: INotificationMessage | INotificationMessage[]): void;
    error(message: INotificationMessage | INotificationMessage[]): void;
    notify(notification: any): any;
    private _notify;
    prompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle;
}
