import { ILifecycleService, LifecyclePhase, WillShutdownEvent, StartupKind, BeforeShutdownEvent, ShutdownReason } from '@workbench-stack/core';
import { Event } from '@vscode-alt/monaco-editor/esm/vs/base/common/event';
export declare class LifecycleClientService implements ILifecycleService {
    protected logService: any;
    startupKind: StartupKind;
    private _phase;
    private phaseWhen;
    private _onBeforeShutdown;
    private _onWillShutdown;
    private _onShutdown;
    constructor(logService: any);
    get phase(): LifecyclePhase;
    set phase(value: LifecyclePhase);
    fireShutdown(reason?: ShutdownReason): void;
    fireWillShutdown(event: BeforeShutdownEvent): void;
    get onBeforeShutdown(): Event<BeforeShutdownEvent>;
    get onWillShutdown(): Event<WillShutdownEvent>;
    get onShutdown(): Event<void>;
    when(phase: LifecyclePhase): Promise<void>;
}
