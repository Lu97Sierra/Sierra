"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtensionsRegistryImpl = void 0;
const registry_1 = require("../../registry");
const core_1 = require("@workbench-stack/core");
const schema_1 = require("../schema");
const constants_1 = require("../../../constants");
const extension_point_1 = require("./extension-point");
const schemaRegistry = registry_1.Registry.Instance.as(core_1.Extensions.JSONContribution);
class ExtensionsRegistryImpl {
    constructor() {
        this._extensionPoints = new Map();
    }
    registerExtensionPoint(desc) {
        if (this._extensionPoints.has(desc.extensionPoint)) {
            throw new Error('Duplicate extension point: ' + desc.extensionPoint);
        }
        const result = new extension_point_1.ExtensionPoint(desc.extensionPoint, desc.defaultExtensionKind);
        this._extensionPoints.set(desc.extensionPoint, result);
        schema_1.schema.properties['contributes'].properties[desc.extensionPoint] = desc.jsonSchema;
        schemaRegistry.registerSchema(constants_1.extensionSchemaId, schema_1.schema);
        return result;
    }
    getExtensionPoints() {
        return Array.from(this._extensionPoints.values());
    }
}
exports.ExtensionsRegistryImpl = ExtensionsRegistryImpl;
//# sourceMappingURL=extensions-registry-impl.js.map