"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultUserDataPath = exports.getAppDataPath = void 0;
const path = require('path');
const os = require('os');
// var pkg = require('../package.json');
let appResolve = require('app-root-path').require;
/**
 * @param {string} platform
 * @returns {string}
 */
function getAppDataPath(platform) {
    //@sri since we know the env. we just return
    return process.env['CDECODE_APPDATA'] ? process.env['CDECODE_APPDATA'] : process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');
    // switch (platform) {
    //   case 'win32': return process.env['VSCODE_APPDATA'] || path.join(process.env['USERPROFILE'], 'AppData', 'Roaming');
    //   case 'darwin': return process.env['VSCODE_APPDATA'] || path.join(os.homedir(), 'Library', 'Application Support');
    //   case 'linux': return process.env['VSCODE_APPDATA'] || process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');
    //   default: throw new Error('Platform "' + platform + '" not supported');
    // }
}
exports.getAppDataPath = getAppDataPath;
/**
 * @param {string} platform
 * @returns {string}
 */
function getDefaultUserDataPath(platform) {
    const appName = appResolve('package.json').name;
    return path.join(getAppDataPath(platform), appName);
}
exports.getDefaultUserDataPath = getDefaultUserDataPath;
//# sourceMappingURL=paths.js.map