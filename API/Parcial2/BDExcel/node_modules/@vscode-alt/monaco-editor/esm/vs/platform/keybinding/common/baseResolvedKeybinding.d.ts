import { OperatingSystem } from '../../../base/common/platform';
import { Modifiers } from '../../../base/common/keybindingLabels';
import { ResolvedKeybinding, ResolvedKeybindingPart } from '../../../base/common/keyCodes';
export declare abstract class BaseResolvedKeybinding<T extends Modifiers> extends ResolvedKeybinding {
    protected readonly _os: OperatingSystem;
    protected readonly _parts: T[];
    constructor(os: OperatingSystem, parts: T[]);
    getLabel(): string | null;
    getAriaLabel(): string | null;
    getElectronAccelerator(): string | null;
    getUserSettingsLabel(): string | null;
    isWYSIWYG(): boolean;
    isChord(): boolean;
    getParts(): ResolvedKeybindingPart[];
    private _getPart;
    getDispatchParts(): (string | null)[];
    protected abstract _getLabel(keybinding: T): string | null;
    protected abstract _getAriaLabel(keybinding: T): string | null;
    protected abstract _getElectronAccelerator(keybinding: T): string | null;
    protected abstract _getUserSettingsLabel(keybinding: T): string | null;
    protected abstract _isWYSIWYG(keybinding: T): boolean;
    protected abstract _getDispatchPart(keybinding: T): string | null;
}
