import { AbstractCommandsQuickAccessProvider, ICommandQuickPick, ICommandsQuickAccessOptions } from '../../../platform/quickinput/browser/commandsQuickAccess';
import { IEditor } from '../../common/editorCommon';
import { IInstantiationService } from '../../../platform/instantiation/common/instantiation';
import { IKeybindingService } from '../../../platform/keybinding/common/keybinding';
import { ITelemetryService } from '../../../platform/telemetry/common/telemetry';
import { INotificationService } from '../../../platform/notification/common/notification';
import { ICommandService } from '../../../platform/commands/common/commands';
export declare abstract class AbstractEditorCommandsQuickAccessProvider extends AbstractCommandsQuickAccessProvider {
    constructor(options: ICommandsQuickAccessOptions, instantiationService: IInstantiationService, keybindingService: IKeybindingService, commandService: ICommandService, telemetryService: ITelemetryService, notificationService: INotificationService);
    /**
     * Subclasses to provide the current active editor control.
     */
    protected abstract activeTextEditorControl: IEditor | undefined;
    protected getCodeEditorCommandPicks(): ICommandQuickPick[];
}
