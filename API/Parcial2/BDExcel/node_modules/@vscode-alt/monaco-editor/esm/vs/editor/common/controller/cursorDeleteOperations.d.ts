import { EditorAutoClosingStrategy } from '../config/editorOptions';
import { CursorConfiguration, EditOperationResult, EditOperationType, ICursorSimpleModel } from './cursorCommon';
import { Selection } from '../core/selection';
import { ICommand } from '../editorCommon';
import { StandardAutoClosingPairConditional } from '../modes/languageConfiguration';
export declare class DeleteOperations {
    static deleteRight(prevEditOperationType: EditOperationType, config: CursorConfiguration, model: ICursorSimpleModel, selections: Selection[]): [boolean, Array<ICommand | null>];
    static isAutoClosingPairDelete(autoClosingBrackets: EditorAutoClosingStrategy, autoClosingQuotes: EditorAutoClosingStrategy, autoClosingPairsOpen: Map<string, StandardAutoClosingPairConditional[]>, model: ICursorSimpleModel, selections: Selection[]): boolean;
    private static _runAutoClosingPairDelete;
    static deleteLeft(prevEditOperationType: EditOperationType, config: CursorConfiguration, model: ICursorSimpleModel, selections: Selection[]): [boolean, Array<ICommand | null>];
    static cut(config: CursorConfiguration, model: ICursorSimpleModel, selections: Selection[]): EditOperationResult;
}
