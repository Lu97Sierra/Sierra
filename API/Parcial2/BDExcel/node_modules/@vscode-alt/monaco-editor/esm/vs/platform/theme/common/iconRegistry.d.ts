import { IJSONSchema } from '../../../base/common/jsonSchema';
import { ThemeIcon } from './themeService';
import { Event } from '../../../base/common/event';
export declare const Extensions: {
    IconContribution: string;
};
export declare type IconDefaults = ThemeIcon | IconDefinition;
export interface IconDefinition {
    fontId?: string;
    character: string;
}
export interface IconContribution {
    id: string;
    description: string | undefined;
    deprecationMessage?: string;
    defaults: IconDefaults;
}
export interface IIconRegistry {
    readonly onDidChange: Event<void>;
    /**
     * Register a icon to the registry.
     * @param id The icon id
     * @param defaults The default values
     * @description the description
     */
    registerIcon(id: string, defaults: IconDefaults, description?: string): ThemeIcon;
    /**
     * Register a icon to the registry.
     */
    deregisterIcon(id: string): void;
    /**
     * Get all icon contributions
     */
    getIcons(): IconContribution[];
    /**
     * Get the icon for the given id
     */
    getIcon(id: string): IconContribution | undefined;
    /**
     * JSON schema for an object to assign icon values to one of the color contributions.
     */
    getIconSchema(): IJSONSchema;
    /**
     * JSON schema to for a reference to a icon contribution.
     */
    getIconReferenceSchema(): IJSONSchema;
    /**
     * The CSS for all icons
     */
    getCSS(): string;
}
export declare function registerIcon(id: string, defaults: IconDefaults, description: string, deprecationMessage?: string): ThemeIcon;
export declare function getIconRegistry(): IIconRegistry;
export declare const iconsSchemaId = "vscode://schemas/icons";
export declare const widgetClose: ThemeIcon;
export declare const gotoPreviousLocation: ThemeIcon;
export declare const gotoNextLocation: ThemeIcon;
