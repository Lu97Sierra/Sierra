import { ITextModel } from '../../common/model';
import { FoldingMarkers } from '../../common/modes/languageConfiguration';
import { FoldingRegions } from './foldingRanges';
import { RangeProvider } from './folding';
import { CancellationToken } from '../../../base/common/cancellation';
export declare const ID_INDENT_PROVIDER = "indent";
export declare class IndentRangeProvider implements RangeProvider {
    private readonly editorModel;
    readonly id = "indent";
    constructor(editorModel: ITextModel);
    dispose(): void;
    compute(cancelationToken: CancellationToken): Promise<FoldingRegions>;
}
export declare class RangesCollector {
    private readonly _startIndexes;
    private readonly _endIndexes;
    private readonly _indentOccurrences;
    private _length;
    private readonly _foldingRangesLimit;
    constructor(foldingRangesLimit: number);
    insertFirst(startLineNumber: number, endLineNumber: number, indent: number): void;
    toIndentRanges(model: ITextModel): FoldingRegions;
}
export declare function computeRanges(model: ITextModel, offSide: boolean, markers?: FoldingMarkers, foldingRangesLimit?: number): FoldingRegions;
