import { IMarkdownString } from '../../../base/common/htmlContent';
import { ICodeEditor } from '../../browser/editorBrowser';
import { GlyphHoverWidget } from './hoverWidgets';
import { IModeService } from '../../common/services/modeService';
import { IOpenerService } from '../../../platform/opener/common/opener';
export interface IHoverMessage {
    value: IMarkdownString;
}
export declare class ModesGlyphHoverWidget extends GlyphHoverWidget {
    static readonly ID = "editor.contrib.modesGlyphHoverWidget";
    private _messages;
    private _lastLineNumber;
    private readonly _markdownRenderer;
    private readonly _computer;
    private readonly _hoverOperation;
    private readonly _renderDisposeables;
    constructor(editor: ICodeEditor, modeService: IModeService, openerService?: IOpenerService);
    dispose(): void;
    onModelDecorationsChanged(): void;
    startShowingAt(lineNumber: number): void;
    hide(): void;
    _withResult(result: IHoverMessage[]): void;
    private _renderMessages;
}
