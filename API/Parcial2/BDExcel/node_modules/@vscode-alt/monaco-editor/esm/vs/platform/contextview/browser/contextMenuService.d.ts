import { IContextMenuHandlerOptions } from './contextMenuHandler';
import { IContextViewService, IContextMenuService } from './contextView';
import { ITelemetryService } from '../../telemetry/common/telemetry';
import { INotificationService } from '../../notification/common/notification';
import { IContextMenuDelegate } from '../../../base/browser/contextmenu';
import { IThemeService } from '../../theme/common/themeService';
import { IKeybindingService } from '../../keybinding/common/keybinding';
import { Disposable } from '../../../base/common/lifecycle';
export declare class ContextMenuService extends Disposable implements IContextMenuService {
    readonly _serviceBrand: undefined;
    private contextMenuHandler;
    constructor(telemetryService: ITelemetryService, notificationService: INotificationService, contextViewService: IContextViewService, keybindingService: IKeybindingService, themeService: IThemeService);
    configure(options: IContextMenuHandlerOptions): void;
    showContextMenu(delegate: IContextMenuDelegate): void;
}
