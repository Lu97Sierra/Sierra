import { IConfiguration } from '../editorCommon';
import { ViewEventHandler } from '../viewModel/viewEventHandler';
import { IViewLayout, IViewModel } from '../viewModel/viewModel';
import { IColorTheme } from '../../../platform/theme/common/themeService';
import { ColorIdentifier } from '../../../platform/theme/common/colorRegistry';
import { Color } from '../../../base/common/color';
import { ColorScheme } from '../../../platform/theme/common/theme';
export declare class EditorTheme {
    private _theme;
    get type(): ColorScheme;
    constructor(theme: IColorTheme);
    update(theme: IColorTheme): void;
    getColor(color: ColorIdentifier): Color | undefined;
}
export declare class ViewContext {
    readonly configuration: IConfiguration;
    readonly model: IViewModel;
    readonly viewLayout: IViewLayout;
    readonly theme: EditorTheme;
    constructor(configuration: IConfiguration, theme: IColorTheme, model: IViewModel);
    addEventHandler(eventHandler: ViewEventHandler): void;
    removeEventHandler(eventHandler: ViewEventHandler): void;
}
