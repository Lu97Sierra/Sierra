import './goToDefinitionAtPosition.css';
import { IModeService } from '../../../common/services/modeService';
import { IEditorContribution } from '../../../common/editorCommon';
import { ICodeEditor } from '../../../browser/editorBrowser';
import { ITextModelService } from '../../../common/services/resolverService';
import { Position } from '../../../common/core/position';
export declare class GotoDefinitionAtPositionEditorContribution implements IEditorContribution {
    private readonly textModelResolverService;
    private readonly modeService;
    static readonly ID = "editor.contrib.gotodefinitionatposition";
    static readonly MAX_SOURCE_PREVIEW_LINES = 8;
    private readonly editor;
    private readonly toUnhook;
    private readonly toUnhookForKeyboard;
    private linkDecorations;
    private currentWordAtPosition;
    private previousPromise;
    constructor(editor: ICodeEditor, textModelResolverService: ITextModelService, modeService: IModeService);
    static get(editor: ICodeEditor): GotoDefinitionAtPositionEditorContribution;
    startFindDefinitionFromCursor(position: Position): Promise<void>;
    private startFindDefinitionFromMouse;
    private startFindDefinition;
    private getPreviewValue;
    private stripIndentationFromPreviewRange;
    private getPreviewRangeBasedOnIndentation;
    private getPreviewRangeBasedOnBrackets;
    private addDecoration;
    private removeLinkDecorations;
    private isEnabled;
    private findDefinition;
    private gotoDefinition;
    private isInPeekEditor;
    dispose(): void;
}
