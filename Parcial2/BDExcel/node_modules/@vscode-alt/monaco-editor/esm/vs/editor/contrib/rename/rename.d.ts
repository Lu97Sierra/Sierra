import { ServicesAccessor, EditorAction } from '../../browser/editorExtensions';
import { ITextModel } from '../../common/model';
import { ICodeEditor } from '../../browser/editorBrowser';
import { WorkspaceEdit, Rejection } from '../../common/modes';
import { Position, IPosition } from '../../common/core/position';
import { URI } from '../../../base/common/uri';
export declare function rename(model: ITextModel, position: Position, newName: string): Promise<WorkspaceEdit & Rejection>;
export declare class RenameAction extends EditorAction {
    constructor();
    runCommand(accessor: ServicesAccessor, args: [URI, IPosition]): void | Promise<void>;
    run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void>;
}
