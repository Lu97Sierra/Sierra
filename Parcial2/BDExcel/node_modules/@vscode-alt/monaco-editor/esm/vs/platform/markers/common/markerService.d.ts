import { URI } from '../../../base/common/uri';
import { Event } from '../../../base/common/event';
import { IMarkerService, IMarkerData, IResourceMarker, IMarker, MarkerStatistics } from './markers';
export declare class MarkerService implements IMarkerService {
    readonly _serviceBrand: undefined;
    private readonly _onMarkerChanged;
    readonly onMarkerChanged: Event<readonly URI[]>;
    private readonly _data;
    private readonly _stats;
    constructor();
    dispose(): void;
    getStatistics(): MarkerStatistics;
    remove(owner: string, resources: URI[]): void;
    changeOne(owner: string, resource: URI, markerData: IMarkerData[]): void;
    private static _toMarker;
    changeAll(owner: string, data: IResourceMarker[]): void;
    read(filter?: {
        owner?: string;
        resource?: URI;
        severities?: number;
        take?: number;
    }): IMarker[];
    private static _accept;
    private static _dedupeMap;
    private static _debouncer;
}
