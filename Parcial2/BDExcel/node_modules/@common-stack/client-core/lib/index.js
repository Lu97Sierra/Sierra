/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/connector/abstract-connector.ts":
/*!*********************************************!*\
  !*** ./src/connector/abstract-connector.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractFeature = exports.featureCatalog = void 0;
const React = __webpack_require__(/*! react */ "react");
const lodash_1 = __webpack_require__(/*! lodash */ "lodash");
const inversify_1 = __webpack_require__(/*! inversify */ "inversify");
const combine = (features, extractor) => (0, lodash_1.without)((0, lodash_1.union)(...(0, lodash_1.map)(features, res => (0, lodash_1.castArray)(extractor(res)))), undefined);
exports.featureCatalog = {};
class AbstractFeature {
    /**
     * Constructs Client feature module representation, that folds all the feature modules
     * into a single module represented by this instance.
     * @param feature
     * @param features
     */
    constructor(feature, 
    // tslint:disable:trailing-comma
    ...features) {
        // Connectivity
        this.link = combine(arguments, (arg) => arg.link);
        this.errorLink = combine(arguments, (arg) => arg.errorLink);
        this.createFetch = combine(arguments, (arg) => arg.createFetch)
            .slice(-1)
            .pop();
        this.connectionParam = combine(arguments, (arg) => arg.connectionParam);
        // State management
        this.reducer = combine(arguments, (arg) => arg.reducer);
        // Client side schema for apollo-link-state
        this.clientStateParams = combine(arguments, (arg) => arg.clientStateParams);
        // Epic actions
        this.epic = combine(arguments, (arg) => arg.epic);
        this.sidebarSegments = combine(arguments, (arg) => arg.sidebarSegments);
        this.leftMainPanelItems = combine(arguments, (arg) => arg.leftMainPanelItems);
        this.middleMainPanelItems = combine(arguments, (arg) => arg.middleMainPanelItems);
        this.middleMainPanelItemsProps = combine(arguments, (arg) => arg.middleMainPanelItemsProps);
        this.leftFooterItems = combine(arguments, (arg) => arg.leftFooterItems);
        this.rightFooterItems = combine(arguments, (arg) => arg.rightFooterItems);
        this.middleLowerPanelItems = combine(arguments, (arg) => arg.middleLowerPanelItems);
        this.dataIdFromObject = combine(arguments, (arg) => arg.dataIdFromObject);
        this.navItem = combine(arguments, (arg) => arg.navItem);
        this.navItemRight = combine(arguments, (arg) => arg.navItemRight);
        // UI provider-components
        this.rootComponentFactory = combine(arguments, (arg) => arg.rootComponentFactory);
        this.dataRootComponent = combine(arguments, (arg) => arg.dataRootComponent);
        // UI provider-components
        this.languagesFuncs = combine(arguments, (arg) => arg.languagesFuncs);
        // container
        this.createContainerFunc = combine(arguments, arg => arg.createContainerFunc);
        // services
        this.createServiceFunc = combine(arguments, arg => arg.createServiceFunc);
        // TODO: Use React Helmet for those. Low level DOM manipulation
        this.stylesInsert = combine(arguments, (arg) => arg.stylesInsert);
        this.scriptsInsert = combine(arguments, (arg) => arg.scriptsInsert);
        this.reduxPersistTransforms = combine(arguments, (arg) => arg.reduxPersistTransforms);
        // Shared modules data
        this.data = combine([{}].concat(Array.from(arguments)), arg => arg.data)
            .reduce((acc, el) => [Object.assign(Object.assign({}, acc[0]), el)], [{}]);
    }
    get container() {
        if (!this._container) {
            this._container = new inversify_1.Container();
        }
        return this._container;
    }
    get epics() {
        return this.epic;
    }
    getRouter(withRoot, rootComponent) {
        return this.routerFactory(this.getRoutes());
    }
    get reducers() {
        return (0, lodash_1.merge)({}, ...(this.reducer || []));
    }
    createContainers(options) {
        // only create once
        if (this.isContainerLoaded) {
            return this.container;
        }
        this.createContainerFunc.map(createModule => {
            this.container.load(createModule(options));
        });
        this.isContainerLoaded = true;
        return this.container;
    }
    createService(options, updateOptions) {
        // only create once
        if (this.services) {
            return this.services;
        }
        try {
            if (!this.isContainerLoaded) {
                this.createContainers(options);
            }
            this.services = (0, lodash_1.merge)({}, ...this.createServiceFunc.map(serviceFunc => serviceFunc(this.container)));
            return this.services;
        }
        catch (err) {
            throw err;
        }
    }
    getStateParams(args = {}) {
        const cn = this.container;
        return this.clientStateParams.reduce(function (acc, curr) {
            const defs = curr.typeDefs ? Array.isArray(curr.typeDefs) ? curr.typeDefs : [curr.typeDefs] : [];
            const preLinksAccumulator = acc.preLinks || [];
            const attemptFuncAccumulator = acc.retryLinkAttemptFuncs || [];
            const connectionParamsFuncAccumulator = acc.connectionParams || [];
            const callbackBackFuncAccumulator = acc.connectionCallbackFuncs || [];
            const attemptDefaults = acc.defaults || [];
            const schema = defs.map(typeDef => {
                if (typeof typeDef === 'string') {
                    return typeDef;
                }
                console.warn(`Not supported AST format `, typeDef);
            })
                .map(str => str.trim())
                .join('\n');
            const typeDefs = acc.typeDefs ? acc.typeDefs.concat('\n', schema) : schema;
            const defaults = curr.defaults ? attemptDefaults.concat(curr.defaults) : attemptDefaults;
            const resolvers = (0, lodash_1.merge)(acc.resolvers, consoldidatedResolvers(curr.resolvers, args.resolverContex));
            const possibleTypes = (0, lodash_1.merge)(acc.possibleTypes, curr.possibleTypes);
            const typePolicies = (0, lodash_1.merge)(acc.typePolicies, curr.typePolicies);
            const retryLinkAttemptFuncs = curr.retryLinkAttemptFuncs ? attemptFuncAccumulator.concat(curr.retryLinkAttemptFuncs || []) : attemptFuncAccumulator;
            const preLinks = preLinksAccumulator.concat((curr.preLinkFuncs || []).map(linkF => linkF(cn)) || []);
            const connectionParams = curr.connectionParam ? connectionParamsFuncAccumulator.concat(consoldidatedConnection(curr.connectionParam, cn)) : connectionParamsFuncAccumulator;
            const connectionCallbackFuncs = curr.connectionCallbackFunc ? callbackBackFuncAccumulator.concat(curr.connectionCallbackFunc(cn) || []) : callbackBackFuncAccumulator;
            return {
                defaults,
                resolvers,
                typeDefs,
                possibleTypes,
                retryLinkAttemptFuncs,
                preLinks,
                typePolicies,
                connectionParams,
                connectionCallbackFuncs
            };
        }, {});
    }
    get connectionParams() {
        return this.connectionParam;
    }
    get stylesInserts() {
        return this.stylesInsert;
    }
    get scriptsInserts() {
        return this.scriptsInsert;
    }
    get leftMainPanel() {
        return (0, lodash_1.merge)({}, ...(this.leftMainPanelItems || []));
    }
    get middleMainPanel() {
        const panelObj = (0, lodash_1.merge)({}, ...(this.middleMainPanelItems || []));
        const withProps = {};
        Object.keys(panelObj).forEach(key => {
            const props = this.middleMainPanelItemsProps.filter(el => !!el[key]);
            let mergedProps = [];
            props.forEach(el => {
                const insideEl = el[key];
                Object.keys(insideEl).forEach(item => {
                    if (mergedProps[item]) {
                        mergedProps[item] = [...mergedProps[item], ...insideEl[item]];
                    }
                    else {
                        mergedProps = Object.assign(Object.assign({}, mergedProps), { [item]: insideEl[item] });
                    }
                });
            });
            return withProps[key] = React.cloneElement(panelObj[key], mergedProps);
        });
        return withProps;
    }
    get leftFooter() {
        return this.leftFooterItems;
    }
    get rightFooter() {
        return this.rightFooterItems;
    }
    get middleLowerPanel() {
        return (0, lodash_1.merge)({}, ...(this.middleLowerPanelItems || []));
    }
    get reduxPersistStateTransformers() {
        return this.reduxPersistTransforms;
    }
    getDataIdFromObject(result) {
        const dataIdFromObject = (0, lodash_1.merge)({}, ...this.dataIdFromObject);
        if (dataIdFromObject[result.__typename]) {
            return dataIdFromObject[result.__typename](result);
        }
        return result.id || result._id;
    }
}
exports.AbstractFeature = AbstractFeature;
function consoldidatedResolvers(resolvers, context) {
    let finalResolvers;
    if (Array.isArray(resolvers)) {
        const resolverObject = resolvers.map(resolver => {
            return typeof resolver === 'function'
                ? resolver(context)
                : resolver;
        });
        finalResolvers = (0, lodash_1.merge)({}, ...resolverObject);
    }
    else {
        finalResolvers = typeof resolvers === 'function'
            ? resolvers(context)
            : resolvers;
    }
    return finalResolvers;
}
async function consoldidatedConnection(connectionParams, context) {
    let finalConnectionParams;
    if (Array.isArray(connectionParams)) {
        throw new Error('Array is not supported for ConnectionParams');
    }
    else {
        finalConnectionParams = typeof connectionParams === 'function'
            ? await connectionParams(context)
            : connectionParams;
    }
    return finalConnectionParams;
}


/***/ }),

/***/ "./src/connector/index.ts":
/*!********************************!*\
  !*** ./src/connector/index.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./abstract-connector */ "./src/connector/abstract-connector.ts"), exports);


/***/ }),

/***/ "./src/constants/constants.ts":
/*!************************************!*\
  !*** ./src/constants/constants.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.REDUX_PERSIST_KEY = exports.ClientTypes = exports.ElectronTypes = void 0;
const core_1 = __webpack_require__(/*! @common-stack/core */ "@common-stack/core");
Object.defineProperty(exports, "ClientTypes", ({ enumerable: true, get: function () { return core_1.ClientTypes; } }));
Object.defineProperty(exports, "ElectronTypes", ({ enumerable: true, get: function () { return core_1.ElectronTypes; } }));
exports.REDUX_PERSIST_KEY = 'root';


/***/ }),

/***/ "./src/constants/index.ts":
/*!********************************!*\
  !*** ./src/constants/index.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./constants */ "./src/constants/constants.ts"), exports);


/***/ }),

/***/ "./src/helpers/apollo-client-test-helper.ts":
/*!**************************************************!*\
  !*** ./src/helpers/apollo-client-test-helper.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.apolloClientHelper = void 0;
const client_1 = __webpack_require__(/*! @apollo/client */ "@apollo/client");
const client_2 = __webpack_require__(/*! @cdm-logger/client */ "@cdm-logger/client");
const constants_1 = __webpack_require__(/*! ../constants */ "./src/constants/index.ts");
class UtilityClass {
    constructor(modules) {
        this.modules = modules;
    }
    getCacheKey(storeObj) {
        return this.modules.getDataIdFromObject(storeObj);
    }
}
/**
 * Helper method to produce ApolloClient and Services from the feeded Feature Module.
 * @param modules
 */
const apolloClientHelper = (modules) => {
    const clientState = modules.getStateParams({ resolverContex: () => modules.createService({}, {}) });
    const dataIdFromObject = (result) => modules.getDataIdFromObject(result);
    const cache = new client_1.InMemoryCache({
        dataIdFromObject,
        possibleTypes: clientState.possibleTypes
    });
    const schema = ``;
    const params = {
        cache,
        queryDeduplication: true,
        typeDefs: schema.concat(clientState.typeDefs),
        resolvers: clientState.resolvers,
    };
    const client = new client_1.ApolloClient(params);
    clientState.defaults.map(x => {
        if (x.type === 'query') {
            cache.writeQuery(x);
        }
        else if (x.type === 'fragment') {
            cache.writeFragment(x);
        }
    });
    const utility = new UtilityClass(modules);
    // additional bindings to container
    const container = modules.createContainers({});
    container.bind(constants_1.ClientTypes.Logger).toConstantValue(client_2.logger);
    container.bind(constants_1.ClientTypes.UtilityClass).toConstantValue(utility);
    container.bind(constants_1.ClientTypes.ApolloClient).toConstantValue(client);
    container.bind(constants_1.ClientTypes.InMemoryCache).toConstantValue(cache);
    const services = modules.createService({}, {});
    client.container = services;
    return {
        client,
        dataIdFromObject,
        services,
        container,
    };
};
exports.apolloClientHelper = apolloClientHelper;


/***/ }),

/***/ "./src/helpers/index.ts":
/*!******************************!*\
  !*** ./src/helpers/index.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./apollo-client-test-helper */ "./src/helpers/apollo-client-test-helper.ts"), exports);


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./logger */ "./src/logger/index.ts"), exports);
__exportStar(__webpack_require__(/*! ./connector */ "./src/connector/index.ts"), exports);
__exportStar(__webpack_require__(/*! ./interfaces */ "./src/interfaces/index.ts"), exports);
__exportStar(__webpack_require__(/*! ./constants */ "./src/constants/index.ts"), exports);
__exportStar(__webpack_require__(/*! ./helpers */ "./src/helpers/index.ts"), exports);


/***/ }),

/***/ "./src/interfaces/connector.ts":
/*!*************************************!*\
  !*** ./src/interfaces/connector.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {


// tslint:disable:max-line-length
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/interfaces/index.ts":
/*!*********************************!*\
  !*** ./src/interfaces/index.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./connector */ "./src/interfaces/connector.ts"), exports);


/***/ }),

/***/ "./src/logger/index.ts":
/*!*****************************!*\
  !*** ./src/logger/index.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./logger */ "./src/logger/logger.ts"), exports);


/***/ }),

/***/ "./src/logger/logger.ts":
/*!******************************!*\
  !*** ./src/logger/logger.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.logger = void 0;
const client_1 = __webpack_require__(/*! @cdm-logger/client */ "@cdm-logger/client");
const appName = (process.env && process.env.APP_NAME) || 'FullStack';
const logLevel = (process.env && process.env.LOG_LEVEL) || 'info';
const logger = client_1.ClientLogger.create(appName, { level: logLevel });
exports.logger = logger;


/***/ }),

/***/ "@apollo/client":
/*!*********************************!*\
  !*** external "@apollo/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@apollo/client");

/***/ }),

/***/ "@cdm-logger/client":
/*!*************************************!*\
  !*** external "@cdm-logger/client" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("@cdm-logger/client");

/***/ }),

/***/ "@common-stack/core":
/*!*************************************!*\
  !*** external "@common-stack/core" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("@common-stack/core");

/***/ }),

/***/ "inversify":
/*!****************************!*\
  !*** external "inversify" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("inversify");

/***/ }),

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("lodash");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = require("react");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;
//# sourceMappingURL=index.js.map