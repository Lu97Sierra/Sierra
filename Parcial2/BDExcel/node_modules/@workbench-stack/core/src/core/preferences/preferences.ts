/* tslint:disable */
import { ConfigurationTarget,  IClientWorkspaceContextService as IWorkspaceContextService,
    ISettingsEditorOptions } from '../../interfaces';
import { localize } from '@vscode-alt/monaco-editor/esm/vs/nls';
import { URI } from '@vscode-alt/monaco-editor/esm/vs/base/common/uri';
import { Schemas } from '../network';

export function getSettingsTargetName(target: ConfigurationTarget, resource: URI, workspaceContextService: IWorkspaceContextService): string {
    switch (target) {
        case ConfigurationTarget.USER:
        case ConfigurationTarget.USER_LOCAL:
            return localize('userSettingsTarget', "User Settings");
        case ConfigurationTarget.WORKSPACE:
            return localize('workspaceSettingsTarget', "Workspace Settings");
        case ConfigurationTarget.WORKSPACE_FOLDER:
            const folder = workspaceContextService.getWorkspaceFolder(resource);
            return folder ? folder.name : '';
    }
    return '';
}

const DefaultURI = URI.from({scheme: Schemas.cdecode, authority: 'defaultsettings', path: '/settings.json' });
const UserURI = URI.from({scheme: "mongo", authority: 'defaultsettings', path: '/settings.json' });
const WorkspaceURI = URI.from({scheme: Schemas.cdecode, authority: 'defaultsettings', path: '/workspaceSettings.json' });
const WorkspaceFolderURI = URI.from({ scheme: Schemas.cdecode, authority: 'defaultsettings', path: '/resourceSettings.json'})
export const PreDefinedSettingsURI  = {
    Default: DefaultURI,
    User: UserURI,
    Workspace: WorkspaceURI,
    WorkspaceFolder: WorkspaceFolderURI,
}