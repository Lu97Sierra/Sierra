import { injectable, inject, postConstruct } from 'inversify';
import { IClientEnvironmentService, ParsedArgs, IEnvironment, IIDebugParams, IExtensionHostDebugParams, IGetEnvironment_WSQuery, GetEnvironment_WSDocument } from '../../interfaces';
import { URI } from '@vscode-alt/monaco-editor/esm/vs/base/common/uri';


@injectable()
export abstract class AbstractEnvironmentService implements IClientEnvironmentService {

    protected _environment: IEnvironment;

    public abstract extInitialize(): Promise<void>;


    get args(): ParsedArgs {
        return this._environment.args;
    }
    public get execPath() {
        return this._environment.execPath;
    }

    public get cliPath() {
        return this._environment.cliPath;
    }

    public get appRoot() {
        return this._environment.appRoot;
    }

    public get userHome() {
        return this._environment.userHome;
    }

    public get userDataPath() {
        return this._environment.userDataPath;
    }
    public get appNameLong() {
        return this._environment.appNameLong;
    }
    public get appQuality() {
        return this._environment.appQuality;
    }
    public get appSettingsHome() {
        return this._environment.appSettingsHome;
    }
    public get appSettingsPath() {
        return this._environment.appSettingsPath;
    }
    public get appKeybindingsPath() {
        return this._environment.appKeybindingsPath;
    }
    public get settingsSearchBuildId() {
        return this._environment.settingsSearchBuildId;
    }
    public get settingsSearchUrl() {
        return this._environment.settingsSearchUrl;
    }
    public get globalStorageHome() {
        return this._environment.globalStorageHome;
    }
    public get workspaceStorageHome() {
        return this._environment.workspaceStorageHome;
    }
    public get backupHome() {
        return this._environment.backupHome;
    }
    public get backupWorkspacesPath() {
        return this._environment.backupWorkspacesPath;
    }
    public get workspacesHome() {
        return this._environment.workspacesHome;
    }
    public get isExtensionDevelopment() {
        return this._environment.isExtensionDevelopment;
    }
    public get disableExtensions() {
        return this._environment.disableExtensions;
    }
    public get builtinExtensionsPath() {
        return this._environment.builtinExtensionsPath;
    }
    public get extensionsPath() {
        return this._environment.extensionsPath;
    }
    public get extensionDevelopmentLocationURI(): URI[] {
        return this._environment.extensionDevelopmentLocationURI;
    }
    public get extensionTestsPath() {
        return this._environment.extensionTestsPath;
    }
    public get debugExtensionHost(): IExtensionHostDebugParams {
        return this._environment.debugExtensionHost;
    }
    public get debugSearch(): IIDebugParams {
        return this._environment.debugSearch;
    }
    public get logExtensionHostCommunication(): boolean {
        return this._environment.logExtensionHostCommunication;
    }
    public get isBuilt(): boolean {
        return this._environment.isBuilt;
    }
    public get wait(): boolean {
        return this._environment.wait;
    }
    public get status(): boolean {
        return this._environment.status;
    }
    public get performance(): boolean {
        return this._environment.performance;
    }
    public get log(): string {
        return this._environment.log;
    }
    public get logsPath(): string {
        return this._environment.logsPath;
    }
    public get verbose(): boolean {
        return this._environment.verbose;
    }
    public get logLevel(): string {
        return this._environment.logLevel;
    }
    public get skipGettingStarted(): boolean {
        return this._environment.skipGettingStarted;
    }
    public get skipReleaseNotes(): boolean {
        return this._environment.skipReleaseNotes;
    }
    public get skipAddToRecentlyOpened() {
        return this._environment.skipAddToRecentlyOpened;
    }
    public get nodeCachedDataDir() {
        return this._environment.nodeCachedDataDir;
    }
    public get installSourcePath() {
        return this.installSourcePath;
    }
    public get disableUpdates() {
        return this._environment.disableUpdates;
    }
    public get disableCrashReporter() {
        return this._environment.disableCrashReporter;
    }
    public get driverHandle() {
        return this._environment.driverHandle;
    }
    public get driverVerbose() {
        return this._environment.driverVerbose;
    }
    public get keyboardLayoutResource() {
        return this._environment.keyboardLayoutResource;
    }
    public get keybindingsResource() {
        return this._environment.keybindingsResource;
    }
}


