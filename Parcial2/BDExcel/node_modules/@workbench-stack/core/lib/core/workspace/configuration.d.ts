import { URI } from '@vscode-alt/monaco-editor/esm/vs/base/common/uri';
import { ConfigurationChangeEvent, ConfigurationModel, Configuration as BaseConfiguration } from '../configuration';
import { Workspace } from '../workspace';
import { IConfigurationOverrides } from '../../interfaces';
import { ResourceMap } from '@vscode-alt/monaco-editor/esm/vs/base/common/map';
export declare class WorkspaceConfiguration extends BaseConfiguration {
    private readonly _workspace?;
    constructor(defaults: ConfigurationModel, localUser: ConfigurationModel, remoteUser: ConfigurationModel, workspaceConfiguration: ConfigurationModel, folders: ResourceMap<ConfigurationModel>, memoryConfiguration: ConfigurationModel, memoryConfigurationByResource: ResourceMap<ConfigurationModel>, _workspace?: Workspace);
    getValue(key: string | undefined, overrides?: IConfigurationOverrides): any;
    inspect<C>(key: string, overrides?: IConfigurationOverrides): {
        default: C;
        user: C;
        workspace?: C;
        workspaceFolder?: C;
        memory?: C;
        value: C;
    };
    keys(): {
        default: string[];
        user: string[];
        workspace: string[];
        workspaceFolder: string[];
    };
    compareAndUpdateLocalUserConfiguration(user: ConfigurationModel): ConfigurationChangeEvent;
    compareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): ConfigurationChangeEvent;
    compareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): ConfigurationChangeEvent;
    compareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): ConfigurationChangeEvent;
    compareAndDeleteFolderConfiguration(folder: URI): ConfigurationChangeEvent;
    compare(other: WorkspaceConfiguration): string[];
    allKeys(): string[];
}
