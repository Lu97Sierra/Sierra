"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceConfigurationChangeEvent = void 0;
// src/vs/workbench/services/configuration/common/configurationModels.ts
class WorkspaceConfigurationChangeEvent {
    constructor(configurationChangeEvent, workspace) {
        this.configurationChangeEvent = configurationChangeEvent;
        this.workspace = workspace;
    }
    get changedConfiguration() {
        return this.configurationChangeEvent.changedConfiguration;
    }
    get changedConfigurationByResource() {
        return this.configurationChangeEvent.changedConfigurationByResource;
    }
    get affectedKeys() {
        return this.configurationChangeEvent.affectedKeys;
    }
    get source() {
        return this.configurationChangeEvent.source;
    }
    get sourceConfig() {
        return this.configurationChangeEvent.sourceConfig;
    }
    affectsConfiguration(config, resource) {
        if (this.configurationChangeEvent.affectsConfiguration(config, resource)) {
            return true;
        }
        if (resource && this.workspace) {
            let workspaceFolder = this.workspace.getFolder(resource);
            if (workspaceFolder) {
                return this.configurationChangeEvent.affectsConfiguration(config, workspaceFolder.uri);
            }
        }
        return false;
    }
}
exports.WorkspaceConfigurationChangeEvent = WorkspaceConfigurationChangeEvent;
//# sourceMappingURL=workspace-configuration-change-event.js.map