"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheTypenames = exports.ClientTypes = exports.TYPES = exports.CommonTypes = void 0;
exports.CommonTypes = {
    ILogService: Symbol.for('ILogService'),
    ILifecycleService: Symbol.for('ILifecycleService'),
    // Remote Lifecycle
    IRemoteLifecycleService: Symbol.for('IRemoteLifecycleService'),
    IEnvironmentService: Symbol.for('IEnvironmentService'),
    IWorkspaceContextService: Symbol.for('IWorkspaceContextService'),
    IConfigurationService: Symbol.for('IConfigurationService'),
};
exports.TYPES = {
    // common
    ILogService: exports.CommonTypes.ILogService,
    ILifecycleService: exports.CommonTypes.ILifecycleService,
    IEnvironmentService: exports.CommonTypes.IEnvironmentService,
    IConfigurationService: exports.CommonTypes.IConfigurationService,
    IMaketplaceConnector: Symbol.for('IMaketplaceConnector'),
    IDownloadService: Symbol.for('IDownloadService'),
    IFileDownloadService: Symbol.for('IFileDownloadService'),
    IExtensionDownloader: Symbol.for('IExtensionDownloader'),
    ISCMService: Symbol.for('ISCMService'),
    IRegistry: Symbol.for('IRegistry'),
    IBackupService: Symbol.for('IBackupService'),
    INotificationService: Symbol.for('INotificationService'),
    IStorageService: Symbol.for('IStorageService'),
    IPreferenceEditorService: Symbol.for('IPreferenceEditorService'),
    IJSONEditingService: Symbol.for('IJSONEditingService'),
    //workspace
    IWorkspacesService: Symbol.for('IWorkspacesService'),
    IWorkspace: Symbol.for('IWorkspace'),
    IWorkspaceEditingService: Symbol.for('IWorkspaceEditingService'),
    IWorkspaceMigrationService: Symbol.for('IWorkspaceMigrationService'),
    IConfigurationEditingService: Symbol.for('IConfigurationEditingService'),
    IWorkspaceContextService: exports.CommonTypes.IWorkspaceContextService,
    // workbench module
    IWorkbenchMicroservice: Symbol.for('IWorkbenchMicroservice'),
    IWorkbenchEnvironmentService: Symbol.for('IWorkbenchEnvironmentService'),
    // Extension
    IExtensionEnablementService: Symbol.for('IExtensionEnablementService'),
    IExtensionManagementService: Symbol.for('IExtensionManagementService'),
    IExtensionManagementServerService: Symbol.for('IExtensionManagementServerService'),
    IExtensionsWorkbenchService: Symbol.for('IExtensionsWorkbenchService'),
    IExtensionGalleryService: Symbol.for('IExtensionGalleryService'),
    IExtensionGalleryRepository: Symbol.for('IExtensionGalleryRepository'),
    CachedExtensionScanner: Symbol.for('CachedExtensionScanner'),
    IExtensionService: Symbol.for('IExtensionService'),
    ExtensionHostProcessWorker: Symbol.for('ExtensionHostProcessWorker'),
    ExtensionHostProcessWorkerFactory: Symbol.for('Factory<ExtensionHostProcessWorker>'),
    ExtensionHostProfiler: Symbol.for('ExtensionHostProfiler'),
    ExtensionHostProfilerFactory: Symbol.for('Factory<ExtensionHostProfiler>'),
    ExtensionHostProcessManager: Symbol.for('ExtensionHostProcessManager'),
    ExtensionHostProcessManagerFactory: Symbol.for('Factory<ExtensionHostProcessManager>'),
    ExtensionContainer: Symbol.for('ExtensionContainer'),
    IExtensionHostWebsocketManager: Symbol.for('IExtensionHostWebsocketManager'),
    IMultiMessagePassingProtocol: Symbol.for('MultiMessagePassingProtocol'),
    // Extension Host
    IExtHostContext: Symbol.for('IExtHostContext'),
    // URL
    IURLService: Symbol.for('IURLService'),
    IExtensionUrlHandler: Symbol.for('IExtensionUrlHandler'),
    // Registry
    IExtensionMongoConnection: Symbol.for('ExtensionMongoConnection'),
    IRegistryExtensionService: Symbol.for('IRegistryExtensionService'),
    IRegistryExtensionRepository: Symbol.for('IRegistryExtensionRepository'),
    // Moleculer Service
    IConfigurationMicroService: Symbol.for('IConfigurationMicroService'),
    // Local Lifecycle
    IRemoteLifecycleService: exports.CommonTypes.IRemoteLifecycleService,
    /**
     * @deprecated
     */
    ICommonMicroservice: Symbol.for('ICommonMicroservice'),
};
exports.ClientTypes = {
    IEditorService: Symbol.for('IEditorService'),
    ICodeEditorService: Symbol.for(''),
    IEditorGroupsService: Symbol.for('IEditorGroupsService'),
    IModelService: Symbol.for('IModelService'),
    IModeService: Symbol.for('IModeService'),
    IContextKeyService: Symbol.for('IContextKeyService'),
    IResourceContextKey: Symbol.for('IResourceContextKey'),
    ITextResourceConfigurationService: Symbol.for('ITextResourceConfigurationService'),
    ITextModelService: Symbol.for('ITextModelService'),
    // common types
    IEnvironmentService: exports.CommonTypes.IEnvironmentService,
    IConfigurationService: exports.CommonTypes.IConfigurationService,
    IWorkspaceContextService: exports.CommonTypes.IWorkspaceContextService,
    ILifecycleService: exports.CommonTypes.ILifecycleService,
    IRemoteLifecycleService: exports.CommonTypes.IRemoteLifecycleService,
    IPreferenceEditorService: Symbol.for('IPreferenceEditorService'),
    IJSONEditingService: Symbol.for('IJSONEditingService'),
    INotificationService: Symbol.for('INotificationService'),
    IDialogService: Symbol.for('IDialogService'),
    IStatusbarService: Symbol.for('IStatusbarService'),
    IKeybindingService: Symbol.for('IKeybindingService'),
    IKeybindingEditingService: Symbol.for('IKeybindingEditingService'),
    IKeymapService: Symbol.for('IKeymapService'),
    IStorageService: Symbol.for('IStorageService'),
    ICommandService: Symbol.for('ICommandService'),
    IContextMenuService: Symbol.for('IContextMenuService'),
    IQuickInputService: Symbol.for('IQuickInputService'),
};
var CacheTypenames;
(function (CacheTypenames) {
    CacheTypenames["Context"] = "Context";
    CacheTypenames["Environment"] = "Environment";
    CacheTypenames["EditorPart"] = "EditorPart";
    CacheTypenames["EditorGroup"] = "EditorGroup";
    // Editors
    CacheTypenames["ResourceEditorInput"] = "ResourceEditorInput";
    CacheTypenames["DiffEditorInput"] = "DiffEditorInput";
    CacheTypenames["SideBySideEditorInput"] = "SideBySideEditorInput";
    CacheTypenames["UntitledEditorInput"] = "UntitledEditorInput";
    // FileEditorInput = 'FileEditorInput',
    CacheTypenames["DataUriEditorInput"] = "DataUriEditorInput";
    CacheTypenames["PreferencesEditorInput"] = "PreferencesEditorInput";
    CacheTypenames["KeybindingEditorInput"] = "KeybindingEditorInput";
    // deprecated
    CacheTypenames["PreferenceEditorInput"] = "PreferencesEditorInput";
    CacheTypenames["Configuration"] = "Configuration";
    CacheTypenames["GitEditorInput"] = "GitEditorInput";
    // workspace and configuration
    CacheTypenames["ConfigurationData"] = "ConfigurationData";
    CacheTypenames["WorkspaceFolderData"] = "WorkspaceFolderData";
    CacheTypenames["WorkspaceData"] = "WorkspaceData";
    CacheTypenames["ResourceMapConfigurationModel"] = "ResourceMapConfigurationModel";
    CacheTypenames["FolderConfigurationModel"] = "FolderConfigurationModel";
    CacheTypenames["FolderWorkspace"] = "FolderWorkspace";
    //Notifications
    CacheTypenames["Notification"] = "Notification";
    CacheTypenames["Notifications"] = "Notifications";
    CacheTypenames["Actions"] = "Actions";
    CacheTypenames["Action"] = "Action";
    CacheTypenames["ActionRun"] = "ActionRun";
    //Dialog
    CacheTypenames["Dialog"] = "Dialog";
    CacheTypenames["Detail"] = "Detail";
    //statusbar
    CacheTypenames["Statusbar"] = "Statusbar";
    CacheTypenames["StatubarEntry"] = "StatubarEntry";
    CacheTypenames["StatusbarItem"] = "StatusbarItem";
    CacheTypenames["Terminal"] = "Terminal";
    CacheTypenames["SelectionStatus"] = "SelectionStatus";
    CacheTypenames["Indentation"] = "Indentation";
    CacheTypenames["EncodingStatus"] = "EncodingStatus";
    CacheTypenames["EndOfLineSequence"] = "EndOfLineSequence";
    CacheTypenames["LanguageMode"] = "LanguageMode";
    CacheTypenames["SyncStatus"] = "SyncStatus";
    CacheTypenames["BranchStatus"] = "BranchStatus";
    //Keybindings
    CacheTypenames["Keybindings"] = "Keybindings";
    CacheTypenames["KeybindingItem"] = "KeybindingItem";
    CacheTypenames["KeyboardEvent"] = "KeyboardEvent";
    //ContextMenu
    CacheTypenames["ContextMenu"] = "ContextMenu";
    CacheTypenames["Anchor"] = "Anchor";
    CacheTypenames["MenuItem"] = "MenuItem";
    //QuickInputModel
    CacheTypenames["QuickInputModel"] = "QuickInputModel";
    CacheTypenames["QuickInput"] = "QuickInput";
    CacheTypenames["QuickPick"] = "QuickPick";
    CacheTypenames["QuickPickItem"] = "QuickPickItem";
    //settings
    CacheTypenames["SettingsGroup"] = "SettingsGroup";
    CacheTypenames["SettingsSection"] = "SettingsSection";
    CacheTypenames["Setting"] = "Setting";
    //GoToLineQuickAccess
    CacheTypenames["GoToLineQuickAccess"] = "GoToLineQuickAccess";
    CacheTypenames["LineRange"] = "LineRange";
})(CacheTypenames = exports.CacheTypenames || (exports.CacheTypenames = {}));
//# sourceMappingURL=types.js.map