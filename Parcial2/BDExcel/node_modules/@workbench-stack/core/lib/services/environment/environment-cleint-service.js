"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnvironmentClientService = void 0;
const inversify_1 = require("inversify");
const apollo_client_1 = require("apollo-client");
const interfaces_1 = require("../../interfaces");
const client_core_1 = require("@common-stack/client-core");
let EnvironmentClientService = class EnvironmentClientService {
    constructor(apollo) {
        this.apollo = apollo;
    }
    get args() {
        return this._environment.args;
    }
    get execPath() {
        return this._environment.execPath;
    }
    get cliPath() {
        return this._environment.cliPath;
    }
    get appRoot() {
        return this._environment.appRoot;
    }
    get userHome() {
        return this._environment.userHome;
    }
    get userDataPath() {
        return this._environment.userDataPath;
    }
    get appNameLong() {
        return this._environment.appNameLong;
    }
    get appQuality() {
        return this._environment.appQuality;
    }
    get appSettingsHome() {
        return this._environment.appSettingsHome;
    }
    get appSettingsPath() {
        return this._environment.appSettingsPath;
    }
    get appKeybindingsPath() {
        return this._environment.appKeybindingsPath;
    }
    get settingsSearchBuildId() {
        return this._environment.settingsSearchBuildId;
    }
    get settingsSearchUrl() {
        return this._environment.settingsSearchUrl;
    }
    get globalStorageHome() {
        return this._environment.globalStorageHome;
    }
    get workspaceStorageHome() {
        return this._environment.workspaceStorageHome;
    }
    get backupHome() {
        return this._environment.backupHome;
    }
    get backupWorkspacesPath() {
        return this._environment.backupWorkspacesPath;
    }
    get workspacesHome() {
        return this._environment.workspacesHome;
    }
    get isExtensionDevelopment() {
        return this._environment.isExtensionDevelopment;
    }
    get disableExtensions() {
        return this._environment.disableExtensions;
    }
    get builtinExtensionsPath() {
        return this._environment.builtinExtensionsPath;
    }
    get extensionsPath() {
        return this._environment.extensionsPath;
    }
    get extensionDevelopmentLocationURI() {
        return this._environment.extensionDevelopmentLocationURI;
    }
    get extensionTestsPath() {
        return this._environment.extensionTestsPath;
    }
    get debugExtensionHost() {
        return this._environment.debugExtensionHost;
    }
    get debugSearch() {
        return this._environment.debugSearch;
    }
    get logExtensionHostCommunication() {
        return this._environment.logExtensionHostCommunication;
    }
    get isBuilt() {
        return this._environment.isBuilt;
    }
    get wait() {
        return this._environment.wait;
    }
    get status() {
        return this._environment.status;
    }
    get performance() {
        return this._environment.performance;
    }
    get log() {
        return this._environment.log;
    }
    get logsPath() {
        return this._environment.logsPath;
    }
    get verbose() {
        return this._environment.verbose;
    }
    get logLevel() {
        return this._environment.logLevel;
    }
    get skipGettingStarted() {
        return this._environment.skipGettingStarted;
    }
    get skipReleaseNotes() {
        return this._environment.skipReleaseNotes;
    }
    get skipAddToRecentlyOpened() {
        return this._environment.skipAddToRecentlyOpened;
    }
    get nodeCachedDataDir() {
        return this._environment.nodeCachedDataDir;
    }
    get installSourcePath() {
        return this.installSourcePath;
    }
    get disableUpdates() {
        return this._environment.disableUpdates;
    }
    get disableCrashReporter() {
        return this._environment.disableCrashReporter;
    }
    get driverHandle() {
        return this._environment.driverHandle;
    }
    get driverVerbose() {
        return this._environment.driverVerbose;
    }
    get keyboardLayoutResource() {
        return this._environment.keyboardLayoutResource;
    }
    get keybindingsResource() {
        return this._environment.keybindingsResource;
    }
    asyncInitializedWorkspaceContainer() {
        return __awaiter(this, void 0, void 0, function* () {
            const result = yield this.apollo.query({
                query: interfaces_1.GetEnvironment_WSDocument,
            });
            console.log('-----result--...', result);
            this._environment = result.data.getEnvironment;
        });
    }
};
__decorate([
    inversify_1.postConstruct(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], EnvironmentClientService.prototype, "asyncInitializedWorkspaceContainer", null);
EnvironmentClientService = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(client_core_1.ClientTypes.ApolloClient)),
    __metadata("design:paramtypes", [apollo_client_1.ApolloClient])
], EnvironmentClientService);
exports.EnvironmentClientService = EnvironmentClientService;
//# sourceMappingURL=environment-cleint-service.js.map