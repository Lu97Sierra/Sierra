import { ICodeEditorService, IEditorService, IModelService, IModeService } from './editor';
import { IPreferenceEditorService } from './prefereneces';
import { IContextKeyService, IResourceContextKey } from './context-key-service';
import { IEditorGroupsService } from './editor/editor-groups-service';
import { ITextFileService } from './textfile';
import { IClientWorkspaceContextService as IWorkspaceContextService } from './workspace';
import { ILifecycleService } from './lifecycle';
import { IJSONEditingService, IClientConfigurationService } from './configuration';
import { ApolloClient } from 'apollo-client';
import { InMemoryCache } from 'apollo-cache-inmemory';
import { INotificationsService } from './notification';
import { IDialogService } from './dialog';
import { IStatusbarService } from './statusbar';
import { IKeybindingService, IKeymapService, IKeybindingEditingService } from './keybinding';
import { IStorageService } from './storage';
import { ICommandService } from './commands';
import { IContextMenuService } from './contextmenu';
import { IQuickInputService } from './quickinput';
/**
 * Services that are available for the workbench. It does contains some external services included from
 * sub packages(external to this project) such as `@files-stack/core`
 */
export interface IClientService {
    readonly configurationService: IClientConfigurationService;
    readonly editorService: IEditorService;
    readonly treeViews?: any;
    readonly editorGroupsService: IEditorGroupsService;
    readonly codeEditorService: ICodeEditorService;
    readonly modelService: IModelService;
    readonly modeService: IModeService;
    readonly contextKeyService: IContextKeyService;
    readonly resourceContextKey: IResourceContextKey;
    readonly textFileService: ITextFileService;
    readonly untitledEditorService: any;
    readonly lifecycleService: ILifecycleService;
    readonly preferenceEditorService: IPreferenceEditorService;
    readonly jsonEditingService: IJSONEditingService;
    readonly workspaceContextService: IWorkspaceContextService;
    readonly notificationService: INotificationsService;
    readonly dialogService: IDialogService;
    readonly statusbarService: IStatusbarService;
    readonly keybindingService: IKeybindingService;
    readonly keybindingEditingService: IKeybindingEditingService;
    readonly keymapService: IKeymapService;
    readonly storageService: IStorageService;
    readonly commandService: ICommandService;
    readonly contextMenuService: IContextMenuService;
    readonly quickInputService: IQuickInputService;
}
export interface IApolloUtilityClass {
    getCacheKey(storeObject: any): string;
}
export interface IApolloService {
    readonly apolloClient: ApolloClient<any>;
    readonly cache: InMemoryCache;
    readonly utility: IApolloUtilityClass;
}
