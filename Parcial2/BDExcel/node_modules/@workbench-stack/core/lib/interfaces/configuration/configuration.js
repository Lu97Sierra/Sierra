"use strict";
// mixture of both files under platform and workbench
Object.defineProperty(exports, "__esModule", { value: true });
exports.FOLDER_SCOPES = exports.WORKSPACE_SCOPES = exports.REMOTE_MACHINE_SCOPES = exports.LOCAL_MACHINE_SCOPES = exports.ConfigurationTarget = exports.ConfigurationScope = void 0;
var ConfigurationScope;
(function (ConfigurationScope) {
    /**
     * Application specific configuration, which can be configured only in local user settings.
     */
    ConfigurationScope[ConfigurationScope["APPLICATION"] = 1] = "APPLICATION";
    /**
     * Machine specific configuration, which can be configured only in local and remote user settings.
     */
    ConfigurationScope[ConfigurationScope["MACHINE"] = 2] = "MACHINE";
    /**
     * Window specific configuration, which can be configured in the user or workspace settings.
     */
    ConfigurationScope[ConfigurationScope["WINDOW"] = 3] = "WINDOW";
    /**
     * Resource specific configuration, which can be configured in the user, workspace or folder settings.
     */
    ConfigurationScope[ConfigurationScope["RESOURCE"] = 4] = "RESOURCE";
})(ConfigurationScope = exports.ConfigurationScope || (exports.ConfigurationScope = {}));
// export interface IConfigurationOverrides {
//     overrideIdentifier?: string;
//     resource?: URI;
// }
var ConfigurationTarget;
(function (ConfigurationTarget) {
    /**
     * Targets the user configuration file for writing.
     */
    ConfigurationTarget[ConfigurationTarget["USER"] = 1] = "USER";
    ConfigurationTarget[ConfigurationTarget["USER_LOCAL"] = 2] = "USER_LOCAL";
    ConfigurationTarget[ConfigurationTarget["USER_REMOTE"] = 3] = "USER_REMOTE";
    /**
     * Targets the workspace configuration file for writing. This only works if a workspace is opened.
     */
    ConfigurationTarget[ConfigurationTarget["WORKSPACE"] = 4] = "WORKSPACE";
    /**
     * Targets the folder configuration file for writing. This only works if a workspace is opened.
     */
    ConfigurationTarget[ConfigurationTarget["WORKSPACE_FOLDER"] = 5] = "WORKSPACE_FOLDER";
    ConfigurationTarget[ConfigurationTarget["DEFAULT"] = 6] = "DEFAULT";
    ConfigurationTarget[ConfigurationTarget["MEMORY"] = 7] = "MEMORY";
})(ConfigurationTarget = exports.ConfigurationTarget || (exports.ConfigurationTarget = {}));
// export interface IConfigurationModel {
//     contents: any;
//     keys: string[];
//     overrides: IOverrides[];
// }
// export interface IOverrides {
//     contents: any;
//     identifiers: string[];
// }
// export interface IConfigurationData extends IIConfigurationData {
//     defaults: IConfigurationModel;
//     user: IConfigurationModel;
//     workspace: IConfigurationModel;
//     folders: { [folder: string]: IConfigurationModel } | IFolderConfigurationModel[];
//     isComplete: boolean;
// }
// src/vs/workbench/services/configuration/common/configuration.ts
exports.LOCAL_MACHINE_SCOPES = [1 /* APPLICATION */, 3 /* WINDOW */, 4 /* RESOURCE */];
exports.REMOTE_MACHINE_SCOPES = [2 /* MACHINE */, 3 /* WINDOW */, 4 /* RESOURCE */];
exports.WORKSPACE_SCOPES = [3 /* WINDOW */, 4 /* RESOURCE */];
exports.FOLDER_SCOPES = [4 /* RESOURCE */];
//# sourceMappingURL=configuration.js.map