"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.workspaceHemeraContainer = exports.workspaceContainer = exports.workspacesContainer = void 0;
const core_1 = require("@workbench-stack/core");
const services_1 = require("../services");
const lifecycle_service_1 = require("../services/lifecycle/lifecycle-service");
const inversify_1 = require("inversify");
// NOTE: Select one of the container based on the workspace need to be initialized.
// workspaceContainer does require workspaceContext passed through the context.
exports.workspacesContainer = (settings) => new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    bind(core_1.TYPES.IWorkspaceEditingService)
        .to(services_1.WorkspaceEditingService).inSingletonScope();
    bind(core_1.TYPES.IWorkspacesService)
        .to(services_1.WorkspacesMainService).inSingletonScope();
});
// workspaceContainer does require workspaceContext passed through the context.
exports.workspaceContainer = () => new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    bind(core_1.TYPES.IWorkspaceContextService).to(services_1.WorkspaceServiceExt).inSingletonScope();
});
// for moleculer specific
exports.workspaceHemeraContainer = (settings) => new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => __awaiter(void 0, void 0, void 0, function* () {
    bind(core_1.TYPES.IWorkspaceContextService)
        .to(services_1.WorkspaceClientService).inSingletonScope();
    bind(core_1.TYPES.IConfigurationService)
        .to(services_1.ConfigurationClientService).inSingletonScope();
    bind(core_1.TYPES.IRemoteLifecycleService)
        .to(lifecycle_service_1.LifecycleService).inSingletonScope();
}));
//# sourceMappingURL=workspace-container.js.map