import { IWorkspacesMainService, IWorkspaceIdentifier, IWorkspaceFolderCreationData, IEnvironmentService, IResolvedWorkspace, IUntitledWorkspaceInfo } from '@workbench-stack/core';
import { URI } from '@vscode-alt/monaco-editor/esm/vs/base/common/uri';
import { Event } from '@vscode-alt/monaco-editor/esm/vs/base/common/event';
import { ILogService } from '../../interfaces';
import { Disposable } from '@vscode-alt/monaco-editor/esm/vs/base/common/lifecycle';
export declare class WorkspacesMainService extends Disposable implements IWorkspacesMainService {
    private readonly environmentService;
    private readonly logService;
    private readonly untitledWorkspacesHome;
    private readonly _onUntitledWorkspaceDeleted;
    get onUntitledWorkspaceDeleted(): Event<IWorkspaceIdentifier>;
    constructor(environmentService: IEnvironmentService, logService: ILogService);
    resolveLocalWorkspaceSync(uri: URI): IResolvedWorkspace | null;
    private isWorkspacePath;
    private doResolveWorkspace;
    private doParseStoredWorkspace;
    private isInsideWorkspacesHome;
    createUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier>;
    createUntitledWorkspaceSync(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): IWorkspaceIdentifier;
    private newUntitledWorkspace;
    getWorkspaceIdentifier(configPath: URI): Promise<IWorkspaceIdentifier>;
    isUntitledWorkspace(workspace: IWorkspaceIdentifier): boolean;
    deleteUntitledWorkspaceSync(workspace: IWorkspaceIdentifier): void;
    deleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void>;
    private doDeleteUntitledWorkspaceSync;
    getUntitledWorkspacesSync(): IUntitledWorkspaceInfo[];
}
export declare function getWorkspaceIdentifier(configPath: URI): IWorkspaceIdentifier;
