"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceServiceExt = void 0;
const uri_1 = require("@vscode-alt/monaco-editor/esm/vs/base/common/uri");
const workspace_service_1 = require("./workspace-service");
const inversify_1 = require("inversify");
const core_1 = require("@workbench-stack/core");
const core_2 = require("@files-stack/core");
const ILogger = require("bunyan");
const moleculer_1 = require("moleculer");
const core_3 = require("@common-stack/core");
const configuration_1 = require("../../core/configuration");
const configuration_2 = require("../configuration");
let WorkspaceServiceExt = class WorkspaceServiceExt extends workspace_service_1.WorkspaceService {
    constructor(environmentService, fileService, broker, pubsub, logger) {
        super({
            userSettingsResource: process.env.CDECODE_USER_RESOURCE ? uri_1.URI.parse(process.env.CDECODE_USER_RESOURCE) : uri_1.URI.file(environmentService.appSettingsPath),
            configurationCache: new configuration_1.ConfigurationCache(environmentService)
        }, new configuration_2.ConfigurationFileService(), 
        // new RemoteAgentService(<IWindowConfiguration>{}, environmentService, new RemoteAuthorityResolverService()),
        null, logger);
        this.environmentService = environmentService;
        this.fileService = fileService;
        this.broker = broker;
        this.pubsub = pubsub;
        this.configurationFileService.fileService = this.fileService;
        this.registerListeners();
    }
    registerListeners() {
        this._register(this.onDidChangeWorkbenchState((event) => this.onBrodcastChangeWorkbenchState(event)));
        this._register(this.onDidChangeWorkspaceName((event) => this.onBrodcastChangeWorkspaceName(event)));
        this._register(this.onDidChangeWorkspaceFolders((event) => this.onBroadcastChangeWorkspaceFolders(event)));
    }
    onBrodcastChangeWorkbenchState(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = this.getWorkspace();
            this.broker.broadcast("onDidChangeWorkbenchState" /* onDidChangeWorkbenchState */, { data, event }, ["WorkspaceClientContextService" /* WorkspaceClientContextService */]);
        });
    }
    onBrodcastChangeWorkspaceName(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = this.getWorkspace();
            this.broker.broadcast("onDidChangeWorkspaceName" /* onDidChangeWorkspaceName */, { data }, ["WorkspaceClientContextService" /* WorkspaceClientContextService */]);
        });
    }
    onBroadcastChangeWorkspaceFolders(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = this.getWorkspace();
            this.broker.broadcast("onDidChangeWorkspaceFolders" /* onDidChangeWorkspaceFolders */, { data, event }, ["WorkspaceClientContextService" /* WorkspaceClientContextService */]);
        });
    }
};
WorkspaceServiceExt = __decorate([
    inversify_1.injectable(),
    __param(0, inversify_1.inject(core_1.TYPES.IEnvironmentService)),
    __param(1, inversify_1.inject(core_2.TYPES.IFileService)),
    __param(2, inversify_1.inject(core_3.CommonType.MOLECULER_BROKER)),
    __param(3, inversify_1.inject(core_3.CommonType.PUBSUB)),
    __param(4, inversify_1.inject(core_3.CommonType.LOGGER)),
    __metadata("design:paramtypes", [Object, Object, moleculer_1.ServiceBroker, Object, ILogger])
], WorkspaceServiceExt);
exports.WorkspaceServiceExt = WorkspaceServiceExt;
//# sourceMappingURL=workspace-service-ext.js.map