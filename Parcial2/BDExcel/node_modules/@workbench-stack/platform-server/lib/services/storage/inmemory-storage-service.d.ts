import { Event } from '@vscode-alt/monaco-editor/esm/vs/base/common/event';
import { Disposable } from '@vscode-alt/monaco-editor/esm/vs/base/common/lifecycle';
import { IStorageService, IWorkspaceStorageChangeEvent, StorageScope } from '../../interfaces';
export declare class InMemoryStorageService extends Disposable implements IStorageService {
    private _onDidChangeStorage;
    get onDidChangeStorage(): Event<IWorkspaceStorageChangeEvent>;
    readonly onWillSaveState: Event<any>;
    private globalCache;
    private workspaceCache;
    private getCache;
    get(key: string, scope: StorageScope, fallbackValue: string): string;
    getBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;
    getInteger(key: string, scope: StorageScope, fallbackValue: number): number;
    store(key: string, value: string | boolean | number, scope: StorageScope): Promise<void>;
    remove(key: string, scope: StorageScope): Promise<void>;
}
