import { ICoreProgress as IProgress, IProgressService, IOperation } from '../../interfaces';
export declare class Progress<T> implements IProgress<T> {
    private _callback;
    private _value;
    constructor(callback: (data: T) => void);
    get value(): T;
    report(item: T): void;
}
export declare class LongRunningOperation {
    private progressService;
    private currentOperationId;
    private currentOperationDisposables;
    private currentProgressRunner;
    private currentProgressTimeout;
    constructor(progressService: IProgressService);
    start(progressDelay: number): IOperation;
    stop(): void;
    private doStop;
    dispose(): void;
}
