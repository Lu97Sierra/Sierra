import { IConfigurationNode, IConfigurationRegistry, IConfigurationPropertySchema, IDefaultConfigurationExtension } from '../../../interfaces';
import { Event } from '@vscode-alt/monaco-editor/esm/vs/base/common/event';
export declare class ConfigurationRegistry implements IConfigurationRegistry {
    private readonly defaultOverridesConfigurationNode;
    private readonly configurationContributors;
    private readonly configurationProperties;
    private readonly excludedConfigurationProperties;
    private readonly editorConfigurationSchema;
    private readonly overrideIdentifiers;
    private overridePropertyPattern;
    private readonly _onDidSchemaChange;
    readonly onDidSchemaChange: Event<void>;
    private readonly _onDidUpdateConfiguration;
    readonly onDidUpdateConfiguration: Event<string[]>;
    constructor();
    registerConfiguration(configuration: IConfigurationNode, validate?: boolean): void;
    registerConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;
    deregisterConfigurations(configurations: IConfigurationNode[]): void;
    registerDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;
    deregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;
    notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;
    registerOverrideIdentifiers(overrideIdentifiers: string[]): void;
    private validateAndRegisterProperties;
    getConfigurations(): IConfigurationNode[];
    getConfigurationProperties(): {
        [qualifiedKey: string]: IConfigurationPropertySchema;
    };
    getExcludedConfigurationProperties(): {
        [qualifiedKey: string]: IConfigurationPropertySchema;
    };
    private registerJSONConfiguration;
    private updateSchemaForOverrideSettingsConfiguration;
    private updateOverridePropertyPatternKey;
    private update;
    private computeOverridePropertyPattern;
}
