import { LifecyclePhase, ILifecycleService } from '../../../interfaces';
import { interfaces } from 'inversify';
import { IWorkbenchContributionsRegistry, IWorkbenchContributionSignature } from '../../../interfaces';
export declare class WorkbenchContributionsRegistry implements IWorkbenchContributionsRegistry {
    private container;
    private lifecycleService;
    private toBeInstantiated;
    registerWorkbenchContribution(ctor: IWorkbenchContributionSignature, phase?: LifecyclePhase): void;
    start(instantiationService: interfaces.Container, lifecycleService: ILifecycleService): void;
    private instantiateByPhase;
    private doInstantiateByPhase;
}
